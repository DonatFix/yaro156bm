$('.js-template').each(function() {
    var $template = $(this);
    var $desktopTemplate = $template.find('.js-template-desktop');
    var $mobileTemplate = $template.find('.js-template-mobile');
    var content = (zilvercms.viewport.isEqualOrSmallerThan('md')) ? $mobileTemplate.html() : $desktopTemplate.html();

    $template.replaceWith(content);
});

$.each(zilvercms.variables.sizes, function(index, size) {
    if(zilvercms.viewport.is() === size) {
        $('.js-template-'+size).each(function() {
            var $template = $(this);
            var content = $template.html();
            $template.replaceWith(content);
        });
    }
});

$(document).ready(function() {
    $('.js-address-autofill-invoice, .js-address-autofill-shipping').each(function() {
        var $input = $(this);

        if($input.hasClass('js-address-autofill-shipping')) {
            var type = 'shipping';
        } else {
            var type = 'invoice';
        }

        if($input.hasClass('js-address-zipcode') || $input.hasClass('js-address-streetnr')) {
            $input.on('change.autofillAddress', function() {
                var $zipcode = $('.js-address-autofill-'+type+'.js-address-zipcode');
                var $streetnr = $('.js-address-autofill-'+type+'.js-address-streetnr');
                var $street = $('.js-address-autofill-'+type+'.js-address-street');
                var $place = $('.js-address-autofill-'+type+'.js-address-place');

                var zipcode = $zipcode.val().split(' ').join('');
                var streetnr = $streetnr.val();

                $zipcode.parent().removeAttr('data-warning');
                $streetnr.parent().removeAttr('data-warning');

                if(zipcode.match(/^[1-9][0-9]{3}[\ ]*[A-z]{2}$/i) && streetnr != '') {
                    $.ajax({
                        dataType: 'json',
                        url: '/bjax/webshop/postcodefill/',
                        data: {
                            postcode: zipcode,
                            huisnr: streetnr
                        },
                        success: function(result) {
                            if(result) {
                                if($street.val() == '') {
                                    $street.val(result.street).valid();
                                }
                                if($place.val() == '') {
                                    $place.val(result.city).valid();
                                }
                                window.validZipcode = true;
                            }
                        },
                        error: function() {
                            $zipcode.parent().attr('data-warning', 'Wij vonden geen geldige combinatie van postcode en huisnummer, controleer of deze goed zijn ingevuld.');
                            $streetnr.parent().attr('data-warning', ' ');
                            window.validZipcode = false;
                        }
                    });
                }
            });
        }
    });
});

$(document).ready(function() {
    $('.js-area').each(function() {
        var $area = $(this);
        var $paginationParent = $area.parents('.js-pagination');
        var contentHeight = $area.outerHeight();

        if(contentHeight > 180) {
            var $more = $('<a/>', {
                class: 'area--readmore'
            }).text('Lees meer').on('click', function() {
                $more.hide();
                $area.removeClass('area--max-height');

                if($paginationParent.length) {
                    $paginationParent.find('.slick-list').css('height', $area.parents('.slick-slide').outerHeight());
                }
            });
            $area.append($more).addClass('area--max-height');
        }
    });
});

$(document).ready(function() {
    $('.js-cart').each(function() {
        var $cart = $(this);
        var _timeout;
        var pageTitle = $('title').text();
        var _pageTitleTimeout;

        setSelect2();

        $cart.on('click.updateAmount', '.js-plus-btn, .js-minus-btn', function() {
            var $btn = $(this);
            var $input = $btn.siblings('input');
            var value = parseInt($input.val());
            var step = parseInt($input.attr('step'));
            var update = true;
            if($btn.hasClass('js-plus-btn')) {
                if($input.attr('max') && value >= parseInt($input.attr('max'))) {
                    var $warning = $input.parent().siblings('.js-stock-warning');
                    $warning.fadeIn();

                    setTimeout(function() {
                        $warning.fadeOut();
                    }, 2500);

                    update = false;
                } else {
                    clearTimeout(_timeout);
                    value = (value + step);
                }
            } else {
                clearTimeout(_timeout);
                if(value > 1) {
                    value = (value - step);
                }
            }
            $input.val(value);

            if(update) {
                _timeout = setTimeout(function() {
                    updateCart($cart);
                    _timeout = null;
                }, 500);
            }
        });

        $cart.on('blur.updateAmount', '.js-cart-amount', function() {
            var $input = $(this);
            var value = parseInt($input.val());
            var step = parseInt($input.attr('step'));
            if(step > 1 && !(Math.round(value/step) === (value/step))) {
                var next = Math.ceil(value/step) * step;
                $input.val(next);
            }
            if($input.attr('max') && value > parseInt($input.attr('max'))) {
                $input.val($input.attr('max'));
            }
            updateCart($cart);
        });

        $cart.on('change.updateShippingMethod', '.js-shippingmethod', function(e) {
            updateCart($cart);
        });

        $cart.on('click.removeAmount', '.js-cart-delete', function() {
            var $remove = $(this);
            var $amount = $remove.parent().find('.js-cart-amount');
            $amount.val(0);
            updateCart($cart);
        });

        $cart.on('change.updateShippingMethodCountry', '.js-shippingmethod-country', function() {
            var $select = $(this);
            var $option = $select.parents('label').prev('input');
            $option.val($select.val()).prop('checked', true);
            updateCart($cart);
        });

        $cart.on('click.openSelect2', '.select2', function(e) {
            e.preventDefault();
        });

        // Discount code
        $cart.on('click.showDiscountField', '.js-discount-trigger', function() {
            var $trigger = $(this);
            var $discount = $cart.find('.js-discount');

            $discount.fadeIn();
            $trigger.hide();
        });

        $cart.on('keyup.updateCode', '.js-discountcode', function(e) {
            var $code = $(this);
            var currentCode = $code.data('code');
            var currentValue = $code.val();

            $cart.find('.js-activate-discountcode').toggleClass('hide', (currentCode == currentValue));
            $cart.find('.js-discount').removeClass('invalid');
        });

        $cart.on('keydown.updateCode', '.js-discountcode', function(e) {
            if(e.which == 13) {
                checkDiscountCode($cart);
                return false;
            }
        });

        $cart.on('click.activateCode', '.js-activate-discountcode', function(e) {
            e.preventDefault();
            checkDiscountCode($cart);
        });

        $cart.on('submit.sendCart', function() {
            $cart.addClass('loading');
            $('html').addClass('loading');
        });

        $(window).on('focus', function() {
            clearTimeout(_pageTitleTimeout);
            $('title').html(pageTitle);
        }).on('blur', function() {
            _pageTitleTimeout = setTimeout(function() {
                $('title').html('&#128276; (1) ' + zilvercms.translationHelper('webshop.checkout.dont_forget_your_order'));
            }, 2000);
        });
    });

    function updateCart($cart) {
        var $form = $cart.find('.js-cart-form');
        var $command = $form.find('.js-cart-command');
        $command.val('updatecart');
        var formData = $form.serialize();

        $cart.addClass('loading');
        $('html').addClass('loading');

        $.ajax({
            url: '/cart',
            method: 'POST',
            data: formData,
            success: function(result) {
                var $html = $(result);
                if($html.filter('.js-cart').length) {
                    var cart = $html.filter('.js-cart').html();
                    $cart.html(cart).removeClass('loading');
                    $('html').removeClass('loading');
                    setSelect2();
                } else {
                    window.location.reload();
                }
            },
            error: function(result) {
                $form.submit();
            }
        });
    }

    function checkDiscountCode($cart) {
        var $discount = $cart.find('.js-discount');
        var $discountInput = $cart.find('.js-discountcode');
        var $discountBtn = $cart.find('.js-activate-discountcode');
        var discountCode = $discountInput.val();
        var discountCodeOld = $discountInput.data('code');
        var discountBtnText = $discountBtn.text();

        if(discountCodeOld && discountCode == '') {
            updateCart($cart);
            return;
        }

        $discount.removeClass('invalid');
        $discountBtn.text($discountBtn.data('loading-text'));

        $.ajax('/bjax/webshop/Adddiscountcode', {
            type: 'POST',
            data: {
                discountcode: discountCode,
                keepExisting: true
            },
            success: function() {
                updateCart($cart);
            },
            error: function() {
                $discount.addClass('invalid');
                $discountBtn.text(discountBtnText);
            }
        });
    }

    function setSelect2() {
        $('.js-shippingmethod-country').each(function() {
            var $select = $(this);

            $select.select2({
                allowHtml: true,
                minimumResultsForSearch: -1,
                sorter: function(data) {
                    return data.sort(function(a, b) {
                        return (a.text.toLowerCase() > b.text.toLowerCase()) ? 0 : -1;
                    });
                },
                theme: 'flat',
                templateResult: function(data) {
                    var price = $(data.element).data('price');
                    var $price;

                    if(price) {
                        $price = $('<div/>', {class: 'select2__price'}).html(price);
                    }

                    return $('<div/>', {
                        class: 'd-flex align-items-center'
                    }).html(data.text).append($price);
                },
                templateSelection: function(data) {
                    return $('<div/>', {
                        class: 'd-flex align-items-center'
                    }).html(data.text);
                }
            });
        });
    }
});

$(document).ready(function() {
    $('.js-address-street').each(function() {
        var $street = $(this);

        $street.on('change.updateStreet', function() {
            validateStreet($street);
        });
    });

    $('.js-address-place').each(function() {
        var $place = $(this);

        $place.on('change.updatePlace', function() {
            validatePlace($place);
        });
    });

    $('.js-checkout').each(function() {
        var $form = $(this);
        var $warning = $form.find('.js-checkout-warning');
        var pageTitle = $('title').text();
        var _pageTitleTimeout;

        $form.on('submit.checkoutWarnings', function(event) {
            var $street1ok = validateStreet($('.js-address-street.js-address-autofill-invoice'));
            var $street2ok = validateStreet($('.js-address-street.js-address-autofill-shipping'));
            var $place1ok = validatePlace($('.js-address-place.js-address-autofill-invoice'));
            var $place2ok = validatePlace($('.js-address-place.js-address-autofill-shipping'));

            if(window.validZipcode == false || !$street1ok || !$street2ok || !$place1ok || !$place2ok) {
                $warning.removeClass('d-none');
                $form.removeClass('loading');
                $('html').removeClass('loading');
                $form.off('submit.checkoutWarnings').on('submit.checkoutWarningsIgnore', function(event) {
                    $warning.addClass('d-none');
                    if($form.valid()) {
                        handleSubmit($form, event);
                        $('html').addClass('loading');
                    }
                });

                return false;
            } else if($form.valid()) {
                handleSubmit($form, event);
                $('html').addClass('loading');
            }
        });

        $(window).on('focus', function() {
            clearTimeout(_pageTitleTimeout);
            $('title').html(pageTitle);
        }).on('blur', function() {
            _pageTitleTimeout = setTimeout(function() {
                $('title').html('&#128276; (1) ' + zilvercms.translationHelper('webshop.checkout.dont_forget_your_order'));
            }, 2000);
        });
    });

    $('.js-checkout-payment-option').each(function() {
        var $option = $(this);
        var safetyMessage = $option.data('safety-message');
        var safetyModal = $option.data('safety-modal');
        var $safetyMessage = $('.js-checkout-safety');
        var $safetyModalMessage = $('.js-checkout-safety-modal-message');

        $option.on('change', function() {
            if(this.checked) {
                if(safetyMessage && safetyModal) {
                    $safetyMessage.text(safetyMessage);
                    $safetyModalMessage.text(safetyModal);
                    $safetyMessage.slideDown();
                } else {
                    $safetyMessage.text('');
                    $safetyModalMessage.text('');
                    $safetyMessage.slideUp();
                }
            }
        });

        if(this.checked) {
            $option.trigger('change');
        }
    });

    function handleSubmit($form, formEvent) {
        // Remove name attr from hidden issuers selectboxes and add to first visible one.
        $form.find('.js-checkout-issuer:hidden').removeAttr('name');
        $form.find('.js-checkout-issuer:visible').first().attr('name', 'data[payment][issuer]');

        // Add safety message to loading screen.
        var $safety = $('.js-checkout-safety');
        var $safetyModal = $('.js-checkout-safety-modal');

        if($safety.is(':visible')) {
            formEvent.preventDefault();
            $safetyModal.show();

            setTimeout(function() {
                $form.off('submit').submit();
            }, 3000);

            return false;
        }
    }

    var validateStreet = function($street) {
        var street = $street.val();
        $street.parent().removeAttr('data-warning');

        if(typeof street != 'undefined' && street != '') {
            if($street.hasClass('js-address-autofill-invoice')) {
                var $houseNr = $('.js-address-streetnr.js-address-autofill-invoice');
                var $houseNrAddition = $('input[name="data[invoice][streetnr_addition]"]');
            } else {
                var $houseNr = $('.js-address-streetnr.js-address-autofill-shipping');
                var $houseNrAddition = $('input[name="data[shipping][streetnr_addition]"]');
            }

            var houseNr = $houseNr.val();
            var houseNrAddition = $houseNrAddition.val();
            var regex1 = new RegExp(houseNr + '$');
            var regex2 = new RegExp(houseNr + houseNrAddition + '$');
            var regex3 = new RegExp(houseNr + ' ' + houseNrAddition + '$');

            if(houseNr != '' && (regex1.test(street) || regex2.test(street) || regex3.test(street))) {
                $street.parent().attr('data-warning', zilvercms.translationHelper('webshop.checkout.warning_street_end_housenr'));
                return false;
            }
        }

        return true;
    }

    var validatePlace = function($place) {
        var place = $place.val();
        $place.parent().removeAttr('data-warning');

        if(typeof place != 'undefined' && place != '') {
            if($place.hasClass('js-address-autofill-invoice')) {
                var $country = $('input[name="data[invoice][country]"]');
            } else {
                var $country = $('input[name="data[shipping][country]"]');
            }

            var country = $country.val();

            if(country == 'nl') {
                var provinces = [
                    'DR', // Drenthe
                    'FL', // Flevoland
                    'FR', // Friesland
                    'GD', // Gelderland
                    'GE', // Gelderland - alt
                    'GLD', // Gelderland - alt
                    'GR', // Groningen
                    'LB', // Limburg
                    'LI', // Limburg - alt
                    'NB', // Noord-Brabant
                    'NH', // Noord-Holland
                    'OV', // Overijssel
                    'UT', // Utrecht
                    'ZH', // Zuid-Holland
                    'ZL' // Zeeland
                ];

                for(var i = 0; i < provinces.length; i++) {
                    var province = provinces[i];
                    var regex1 = new RegExp(' '+province + '$');
                    var regex2 = new RegExp(' '+province.toLowerCase() + '$');

                    if(regex1.test(place) || regex2.test(place)) {
                        $place.parent().attr('data-warning', zilvercms.translationHelper('webshop.checkout.warning_province_in_place', {'%province%': province}));
                        return false;
                    }
                }
            }
        }

        return true;
    }

    $('.js-klarna-terms').each(function() {
        var lang = $('html').attr('lang');
        var language = lang.toLowerCase();
        var language = (language === 'be') ? 'nl' : language;
        var country = lang.toUpperCase();

        if(zilvercms.viewport.isGreaterThan('sm')) {
            type = 'desktop';
        }else{
            type = 'mobile';
        }

        new Klarna.Terms.Invoice({
            el: 'kalarnaTerms',
            eid: 'M-2099-2620',
            locale: language+'_'+country,
            charge: 0,
            type: type,
            linkText: (language === 'de') ? 'Rechnungsbedingungen' : 'Factuurvoorwaarden' //TODO move to translations
        });
    });

    $('.js-checkout-applepay').each(function() {
        var $method = $(this);
        if(!!window.ApplePaySession && window.ApplePaySession.canMakePayments()) {
            $method.prop('checked', true);
            $method.next().removeClass('d-none');
        }
    });
});

$(document).ready(function() {
    $('.js-combinations').each(function() {
        var $combinations = $(this);

        $combinations.on('init', function(event, slick) {

        }).on('afterChange', function(event, slick, currentSlide) {
            $combinations.removeClass('first last');

            if(slick.currentSlide === (slick.slideCount - 2)) {
                $combinations.addClass('last');
            } else if (slick.currentSlide === 0) {
                $combinations.addClass('first');
            }
        });

        $combinations.slick({
            arrows: true,
            dots: false,
            infinite: false,
            nextArrow: $combinations.next('.js-combinations-navigation').find('.js-combinations-next'),
            prevArrow: $combinations.next('.js-combinations-navigation').find('.js-combinations-prev'),
            swipe: zilvercms.viewport.isEqualOrSmallerThan('md'),
            slidesToShow: 2,
        });
    });
});

$(document).ready(function() {
    $('.js-cookie-consent').each(function() {
        var $element = $(this),
            data = $element.data('cc');

        window.cookieconsent.initialise({
            'position': data.position,
            'content': {
                'message': data.message,
                'dismiss': data.buttonText,
                'link': data.moreText,
                'href': data.moreLink
            }
        });

        $element.remove();
    });
});
$(document).ready(function() {
    $('.js-countdown').each(function() {
        var countdown;
        var $countdown = $(this);
        var now = $countdown.data('countdown-now');
        var to = $countdown.data('countdown-to');

        countdown = setInterval(function () {
            var distance = parseInt(to) - parseInt(now);
            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((distance % (1000 * 60)) / 1000);

            $countdown.text(hours + ':' + minutes + ':' + seconds);

            if (distance < 0) {
                clearInterval(countdown);
                $countdown.text('');
            }
        }, 1000);
    });
});

$(document).ready(function() {
    $('.js-faq').each(function() {
        var $faq = $(this),
            $categories = $faq.find('.js-faq-category');

        $categories.first().addClass('open').next().slideDown();
        //$categories.first().parent().find('.js-faq-question').first().addClass('open').next().slideDown();

        $categories.each(function() {
            var $category = $(this),
                $parent = $category.parent(),
                $questions = $parent.find('.js-faq-question');

            $category.on('click', function() {
                if($category.hasClass('open')) {
                    $category.removeClass('open').next().slideUp();
                    $questions.removeClass('open').next().slideUp();
                } else {
                    $categories.not($category).removeClass('open').next().slideUp();
                    $category.addClass('open').next().slideDown();
                }
            });

            $questions.each(function() {
                var $question = $(this);

                $question.on('click', function() {
                    if($question.hasClass('open')) {
                        $question.removeClass('open').next().slideUp();
                    } else {
                        $questions.not($question).removeClass('open').next().slideUp();
                        $question.addClass('open').next().slideDown();
                    }
                });
            });
        });
    });
});

$(document).ready(function() {
    var countryCode = zilvercms.getCookie('countryCode');

    if(countryCode === '') {
        $.getJSON('https://get.geojs.io/v1/ip/geo.json', function(location) {
            try {
                countryCode = location.country_code;
                zilvercms.setCookie('countryCode', countryCode, 1);
                geoReady(countryCode);
            } catch(error) {}
        });
    } else {
        geoReady(countryCode);
    }

    function geoReady(countryCode) {
        languageSwitch(countryCode, document.documentElement.lang);

        // Add promobar on visitors from Austria
        if(document.documentElement.lang === 'de' && countryCode === 'AT') {
            $('.js-dynamic-promobar').each(function() {
                var $flag = $('<img/>').attr({
                    'class': 'mr-2',
                    'src': '/templates/cookinglife/images/de/flag_au.png',
                    'height': '16px'
                });
                var freeShippingPrice = zilvercms.getMetaValue('freeShippingPrice');
                if(freeShippingPrice !== '') {
                    var $promobar = $('<div/>').addClass('promobar default text-center').html('Ab '+zilvercms.currencyHelper(freeShippingPrice)+' Bestellwert gratis Versand in Österreich!');
                    $promobar.prepend($flag);
                    $(this).replaceWith($promobar);
                }
            });
        } else if(document.documentElement.lang === 'en' &&
                typeof SUPPORTEDCOUNTRIES === 'object' &&
                typeof SUPPORTEDCOUNTRIES[countryCode] === 'string') {
            $('.js-dynamic-promobar').each(function() {
                var $flag = $('<img/>').attr({
                    'class': 'mr-2',
                    'src': 'https://60cafc33af40b8287ffb-1a032c1af87160c7fc01b9de8fd3221e.ssl.cf3.rackcdn.com/flags/'+countryCode.toLowerCase()+'.png',
                    'height': '16px'
                }).css('vertical-align', '-2px');
                var countryName = SUPPORTEDCOUNTRIES[countryCode];
                var $promobar = $('<div/>').addClass('promobar default text-center').html('Welcome, we are happy to deliver your order to ' + countryName);
                $promobar.prepend($flag);
                $(this).replaceWith($promobar);
            });
        }
    }

    function languageSwitch(countryCode, siteLanguage) {
        var button = 'Doorgaan';
        var content = '';
        var flag = '';
        var link = '';

        if((countryCode === 'DE' || countryCode === 'AT') && siteLanguage !== 'de') {
            button = 'Weiter gehen';
            content =  'Um Ihnen so behilfreich m&ouml;glich zu sein, empfehlen wir ihnen weiter zu shoppen in unseren <a href="https://cookinglife.de" class="link inverted underlined">Deutschen Online shop</a>.';
            flag = 'de';
            link = 'https://cookinglife.de';
        } else if (countryCode === 'BE' && siteLanguage !== 'be') {
            content = 'Om u zo goed mogelijk van dienst te zijn, adviseren wij u om verder te shoppen in onze <a href="https://cookinglife.be" class="link inverted underlined">Belgische winkel</a>.';
            flag = 'be';
            link = 'https://cookinglife.be';
        } else if (countryCode === 'NL' && siteLanguage !== 'nl') {
            content = 'Om u zo goed mogelijk van dienst te zijn, adviseren wij u om verder te shoppen in onze <a href="https://cookinglife.nl" class="link inverted underlined">Nederlandse winkel</a>.';
            flag = 'nl';
            link = 'https://cookinglife.nl';
        } else if (typeof SUPPORTEDCOUNTRIES[countryCode] === 'undefined' && siteLanguage !== 'en') {
            button = 'Continue';
            content = 'In order to provide you with the best possible service, we advise you to continue shopping in our <a href="https://cookinglife.eu" class="link inverted underlined">international store</a>.';
            flag = 'europeanunion';
            link = 'https://cookinglife.eu';
        }

        if(content !== '' && zilvercms.getCookie('languageswitch') === '') {
            $('.js-languageswitch').each(function() {
                var $switch = $(this);
                var $button = $switch.find('.js-languageswitch-button');
                var $close = $switch.find('.js-languageswitch-close');
                var $content = $switch.find('.js-languageswitch-content');
                var $flag = $switch.find('.js-languageswitch-flag');

                $button.attr('href', link).text(button);
                $content.html(content);
                $flag.attr('src', 'https://60cafc33af40b8287ffb-1a032c1af87160c7fc01b9de8fd3221e.ssl.cf3.rackcdn.com/flags/'+flag+'.png');

                $switch.slideDown();

                $close.on('click', function() {
                    $switch.slideUp();
                    return false;
                });

                zilvercms.setCookie('languageswitch', true, 30);
            });
        }
    }
});

$(document).ready(function() {
    $('.js-lazy-img').each(function() {
        var $wrapper = $(this);
        var $image = $wrapper.find('img');
        var image = $image.data('src');
        var height = $wrapper.outerHeight();
        var width = $wrapper.outerWidth();
        var pixelRatio = (window.devicePixelRatio > 1) ? 2 : 1;
        var options = (Math.ceil(width) * pixelRatio + 'x' + Math.ceil(height) * pixelRatio);
        $image.attr('src', zilvercms.imageHelper(image, options));
    });
});

$(document).ready(function() {
    $('.js-mainmenu-toggle').each(function() {
        var $toggle = $(this);
        var $body = $('html');
        var className = 'mainmenu-open';

        $toggle.on('click.mainmenu', function() {
            if($body.hasClass(className)) {
                $body.removeClass(className);
                zilvercms.unlockBody();
            } else {
                $body.addClass(className);
                zilvercms.lockBody();
            }

            return false;
        });
    });
});

$(document).ready(function() {
    $('.js-microcart').each(function() {
        var $cart = $(this),
            $toggle = $('.js-microcart-toggle'),
            $close = $('.js-microcart-close'),
            $loading = $('.js-microcart-loading'),
            $products = $('.js-microcart-products');

        $close.on('click', function(){
            $toggle.trigger('click');
        });

        window.updateMicrocart = function() {

            $loading.addClass('loading-icon');

            // Current product properties, if any
            var $productForm = $('.product-form');
            if($productForm) {
                var currentProductId = parseInt($productForm.find('input[name="productkey"]').val());
                var currentProductMaxCount = $productForm.find('.js-product-count').data('max');
            }

            $.getJSON('/bjax/webshop/Getobjectasjson/cart/', function(data) {
                if(data.itemcount > 0) {
                    $cart.removeClass('microcart--empty');

                    var itemcount = data.itemcount;

                    if(itemcount > 4){
                        itemcount = 4;
                    }
                    $toggle.data('amount', data.itemcount);
                    $('.js-microcart-items-shown').text(itemcount);
                    $('.js-microcart-items-total').text(data.itemcount);
                    $('.js-microcart-subtotal').html(zilvercms.currencyHelper(data.subtotal));
                    if (data.shipping === 0) {
                        $('.js-microcart-shipping').addClass('text-success').text(function() {
                            return $(this).data('translation');
                        });
                    } else {
                        $('.js-microcart-shipping').html(zilvercms.currencyHelper(data.shipping));
                    }
                    $('.js-microcart-total').html(zilvercms.currencyHelper(data.total));

                    $products.empty();

                    for(var i = 0; i < data.items.length; i++) {
                        var itemId = data.items[i].product_id;

                        if(typeof currentProductId !== 'undefined' && currentProductId === itemId) {
                            var itemCount = parseInt(data.items[i].count);
                            if(itemCount >= currentProductMaxCount) {
                                $productForm.find('.js-product-count').val(0).attr({
                                    'data-min': 0,
                                    'data-max': 0
                                });
                                $productForm.find('button[type="submit"]').attr('disabled', 'disabled');
                            } else {
                                $productForm.find('.js-product-count').attr('data-max', (currentProductMaxCount - itemCount));
                            }
                        }

                        if(i < 4) {
                            $products.append('<a href="'+data.items[i].product_url+'"><img src="'+zilvercms.imageHelper(data.items[i].image_url, '100x100,fit')+'" alt="'+data.items[i].name+'"><strong>'+data.items[i].count+'x &nbsp;|&nbsp;'+zilvercms.currencyHelper(data.items[i].current_price)+'</strong></a>');
                        }
                    }
                    $cart.removeClass('microcart--empty');
                } else {
                    $cart.addClass('microcart--empty');
                }

                $('.js-microcart-toggle-count').text(data.itemcount);
                $('.js-microcart-toggle-products').html(zilvercms.currencyHelper(data.total));

                $loading.removeClass('loading-icon');
            });
        };
    });
});

$('.js-modal').each(function() {
    var $trigger = $(this);

    $trigger.on('click', function(e) {
        e.preventDefault();

        var modal = $trigger.data('modal');
        var $modal = $(modal);

        if($modal.is('template')) {
            var identifier = $modal.attr('id');
            var template = $modal.html();
            var $template = $(template);
            $template.attr('id', identifier).appendTo('body').modal('show');
            $modal.remove();

            $template.find('form.js-validation').each(function() {
                $.validator.formValidation(this);
            });
        } else {
            $modal.modal('show');
        }
    });
});

$(document).ready(function() {
    $('.js-order').each(function() {
        var $order = $(this);
        var $select = $order.find('.js-order-select');
        var $selectWrapper = $select.parent();
        var $input = $order.find('.js-order-input');
        var $button = $order.find('.js-order-button');
        var fieldName = $select.attr('name');
        var ajaxSubmit = $order.data('ajax-submit');
        var $addToCart = $('.js-add-to-cart');

        $select.on('change', function() {
            if($select.val() === 'more') {
                $selectWrapper.hide()
                $select.removeAttr('name');
                $input.removeClass('d-none').show().attr('name', fieldName).on('blur', function() {
                    if($input.val() === '') {
                        $selectWrapper.show();
                        $select.attr('name', fieldName);
                        $select.find('option').first().prop('selected', true);
                        $input.hide().removeAttr('name');
                        $order.removeAttr('data-error');
                        $order.parents('.productblock').removeAttr('data-error');
                    }
                });

                if(!/iPhone|iPad|iPod/i.test(navigator.userAgent)) {
                    $input.focus();
                }
            }
        });

        $order.on('submit', function(event) {
            // Extra check if validation is active
            if(!$order.valid()) {
                return false;
            }

            var $microcart = $('.js-microcart-toggle:visible');
            $button.addClass('loading');

            if(!!ajaxSubmit) {
                event.preventDefault();

                var count = $order.find('*[name="count"]').val();
                var pid = $order.find('*[name="productkey"]').val();


                $.ajax({
                    type: 'POST',
                    url: '/cart?ajax=true&pid=' + pid + '&qtn=' + count,
                    dataType: 'json',
                    data: $order.serialize(),
                    complete: function(response) {
                        $button.removeClass('loading');

                        window.updateMicrocart();
                        $('.js-microcart').removeClass('microcart--empty');

                        if(ajaxSubmit === 'small') {
                            $button.addClass('checkmark');

                            if(!$('body').hasClass('modal-open')) {
                                $microcart.addClass('open');
                            }

                            setTimeout(function() {
                                $button.removeClass('checkmark');
                            }, 5000);
                        } else {
                            if($addToCart.length) {
                                if(count > 1) {
                                    var $addToCartCount = $addToCart.find('.js-add-to-cart-count');
                                    var $addToCartPrice = $addToCart.find('.js-add-to-cart-price');
                                    var plainSinglePrice = $addToCartPrice.data('plain-price');

                                    $addToCartCount.text(count);
                                    $addToCartPrice.html(zilvercms.currencyHelper(plainSinglePrice * count));
                                }

                                if(response.responseText.trim().length > 0) {
                                    $addToCart.find('.js-order-info').html(response.responseText.trim());
                                }

                                $('.js-add-to-cart-trigger').click();
                            } else {
                                $microcart.addClass('open');
                            }
                        }

                        if(typeof window.productDetails === 'object' && typeof window.dataLayer === 'object') {
                            productDetails.quantity = count;
                            dataLayer.push({
                                event: 'addToCart',
                                ecommerce: {
                                    currencyCode: 'EUR',
                                    add: {
                                        products: [productDetails]
                                    }
                                }
                            });
                        }
                    }
                });

                return false;
            }
        });
    });
});

$(document).ready(function() {
    $('.js-pagination').each(function() {
        var $pagination = $(this);
        
        $pagination.on('init', function(event, slick) {

        }).on('beforeChange', function(event, slick, currentSlide, nextSlide) {
            if(slick.$slider.data('pagination-scroll')) {
                $('html, body').animate({
                    scrollTop: (slick.$slider.parent().offset().top - 100) + 'px'
                });
            }
            $pagination.toggleClass('last', ((slick.slideCount - 1) === nextSlide));
        }).on('afterChange', function(event, slick, currentSlide) {
            $pagination.next('.js-pagination-navigation').find('.js-pagination-prev').toggleClass('disabled', (slick.currentSlide === 0));
            $pagination.next('.js-pagination-navigation').find('.js-pagination-next').toggleClass('disabled', ((slick.currentSlide + 1) === slick.slideCount));
        });

        $pagination.slick({
            adaptiveHeight: true,
            appendDots: $pagination.next('.js-pagination-navigation').find('.js-pagination-dots'),
            arrows: true,
            dots: true,
            dotsClass: 'pagination__numbers',
            infinite: false,
            nextArrow: $pagination.next('.js-pagination-navigation').find('.js-pagination-next'),
            prevArrow: $pagination.next('.js-pagination-navigation').find('.js-pagination-prev'),
            swipe: zilvercms.viewport.isEqualOrSmallerThan('md'),
            variableWidth: $pagination.data('pagination-variable-width')
        });
    });
});

$(document).ready(function() {
    var $pickupLocation = $('.js-pickup-location');
    var $timeframe = $('.js-timeframe');

    var recievePickupLocations = function(zipcode) {
        if(/^[1-9][0-9]{3}\s?[a-zA-Z]{2}$/.test(zipcode)) {
            var $select = $('.js-pickup-location-select');
            $select.parent().addClass('loading');
            $('.js-pickup-location-select-label').text('Afhaalpunten ophalen...');
            $pickupLocation.parent().removeAttr('data-error');

            $.ajax({
                dataType: 'json',
                method: 'POST',
                url: '/bjax/postnl/getNearestLocations/',
                data: {
                    zipcode: zipcode,
                    countryCode: 'NL',
                    shippingMethodId: $('.js-checkout').data('shippingmethod-id')
                },
                success: function (json) {
                    $select.off('change.selectPickupPoint');
                    $select.empty();

                    if($select.hasClass('select2-hidden-accessible')) {
                        $select.select2('destroy');
                    }

                    $.each(json.locations, function(i) {
                        var distance = parseInt(this.distance);
                        if(distance < 1000) {
                            var distanceText = '< 1 km';
                        } else {
                            var distanceRounded = Math.round(distance/100)/10;
                            var distanceText = distanceRounded.toString().replace('.', ',') + ' km';
                        }

                        var $option = $('<option/>');
                        $option.val(this.name);
                        $option.text([
                            this.name + ',',
                            this.address.street,
                            this.address.houseNr,
                            this.address.city,
                            '(' + distanceText + ')'
                        ].join(' '));

                        $option.attr('data-location-name', this.name);
                        $option.attr('data-location-street', this.address.street);
                        $option.attr('data-location-streetnr', this.address.houseNr);
                        $option.attr('data-location-zipcode', this.address.zipcode);
                        $option.attr('data-location-city', this.address.city);
                        $option.attr('data-location-country', this.address.countryCode);
                        $option.attr('data-location-distance', distanceText);
                        $option.attr('data-location-label', [
                            this.name + '<br>',
                            this.address.street,
                            this.address.houseNr + ',',
                            this.address.city
                        ].join(' '));

                        $select.append($option).valid();
                    });

                    $select.on('change.selectPickupPoint', function() {
                        var $selected = $select.find('option:selected');

                        $('.js-pickup-location-street').val($selected.attr('data-location-street'));
                        $('.js-pickup-location-streetnr').val($selected.attr('data-location-streetnr'));
                        $('.js-pickup-location-zipcode').val($selected.attr('data-location-zipcode'));
                        $('.js-pickup-location-city').val($selected.attr('data-location-city'));
                        $('.js-pickup-location-country').val($selected.attr('data-location-country'));
                        $('.js-summary-pickup').html($selected.attr('data-location-label')).parent('tr').fadeIn();
                    });

                    $select.trigger('change');
                    $select.parent().removeClass('loading');
                    $('.js-pickup-location-select-label').text('Selecteer afhaalpunt');

                    if(zilvercms.viewport.isGreaterThan('xs')) {
                        $select.select2({
                            allowHtml: true,
                            theme: 'flat',
                            templateResult: function(data) {
                                var $option = $(data.element);
                                var name = data.id;
                                var street = $option.data('location-street');
                                var streetnr = $option.data('location-streetnr');
                                var city = $option.data('location-city');
                                var distance = $option.data('location-distance');

                                var newOption = [
                                    '<div>',
                                        name,
                                        '<div class="float-right">',
                                            distance,
                                        '</div>',
                                        '<div class="text small muted">',
                                            street + ' ' + streetnr + ', ' + city,
                                        '</div>',
                                    '</div>'
                                ];
                                return $(newOption.join(''));
                            },
                            templateSelection: function(data) {
                                var $option = $(data.element);
                                var name = data.id;
                                var street = $option.data('location-street');
                                var streetnr = $option.data('location-streetnr');
                                var city = $option.data('location-city');

                                var newOption = [
                                    '<div>',
                                        name,
                                        '<span class="text muted ml-3">',
                                            street + ' ' + streetnr + ', ' + city,
                                        '</span>',
                                    '</div>'
                                ];
                                return $(newOption.join(''));
                            }
                        });
                    }
                },
                error: function(XMLHttpRequest) {
                    $pickupLocation.parent().attr('data-error', 'Kon geen beschikbare afhaalpunten vinden, gebruik een andere postcode.');
                    $('.js-pickup-location-select-label').text('Selecteer afhaalpunt');
                }
            });
        } else {
            $('.js-pickup-location').parent().
                removeAttr('data-success').
                attr('data-error', 'Vul een geldige postcode in, bijv: 1234AB');
        }
    }

    var resetTimeframes = function() {
        var $selectDate = $('.js-timeframe');
        var $selectOption = $('.js-timeframe-options');
        var $summaryDate = $('.js-summary-timeframe-date');
        var $summaryOption = $('.js-summary-timeframe-option');
        var $emptyOption = $('<option/>').text('Kies eerst een bezorgdatum').val('');

        $selectDate.removeAttr('name');

        $selectOption.html($emptyOption).removeAttr('name');
        $selectOption.parent().addClass('loading');

        $summaryDate.parents('tr').fadeOut();
        $summaryOption.parents('tr').fadeOut();
        $summaryDate.empty();
        $summaryOption.empty();

        updateSummaryPrice('shippingcost', 0);
        updateSummaryPrice('price', 0);
    }

    var recieveTimeframes = function() {
        var zipcode = $('.js-address-zipcode:visible').last().val();
        var streetnr = $('.js-address-streetnr:visible').last().val();

        if(zipcode != '' && /^[1-9][0-9]{3}\s?[a-zA-Z]{2}$/.test(zipcode) && streetnr != '') {
            var $selectDate = $('.js-timeframe');
            var $selectOption = $('.js-timeframe-options');
            var $summaryDate = $('.js-summary-timeframe-date');
            var $summaryOption = $('.js-summary-timeframe-option');

            $.ajax({
                dataType: 'json',
                method: 'POST',
                url: '/bjax/postnl/GetAvailableTimeFrames/',
                data: {
                    zipcode: zipcode,
                    houseNumber: streetnr,
                    countryCode: 'NL',
                    shippingMethodId: 1
                },
                success: function (json) {
                    var timeframes = json.available_times.timeFrames;
                    var dateOptions = {};

                    $selectDate.val('').find('.js-timeframe-day').remove();
                    resetTimeframes();

                    if(timeframes.length) {
                        $.each(timeframes, function(i) {
                            var date = this.date;
                            var options = this.options;

                            if(options.length) {
                                if(!dateOptions[date]) {
                                    dateOptions[date] = [];

                                    var $option = $('<option/>');
                                    $option.val(this.date);
                                    $option.text([
                                        this.dateDay,
                                        this.dateNoYear,
                                    ].join(' ')).addClass('js-timeframe-day');

                                    $selectDate.append($option);
                                }

                                dateOptions[date].push(options[0]);
                            }
                        });

                        $selectDate.parent().removeClass('loading');

                        $selectDate.on('change.selectDate', function() {
                            if($selectDate.val() == '') {
                                resetTimeframes();
                            } else {
                                $selectDate.attr('name', 'data[timeframe][preferred_shipping_date]');
                                $selectOption.attr('name', 'data[timeframe][option]').empty();
                                $summaryDate.text($selectDate.find('option:selected').text()).parents('tr').fadeIn();

                                var date = $selectDate.val();
                                var options = dateOptions[date];

                                $.each(options, function(i) {
                                    var $option = $('<option/>');
                                    var label = this.label;

                                    if(this.shipping > 0) {
                                        var price = zilvercms.currencyHelper(this.shipping);
                                        label += ' (+ ' + price + ')';
                                    }

                                    $option.val(this.option).text(label).attr('data-price', this.shipping).addClass('js-timeframe-option');

                                    $selectOption.append($option);

                                    if(i == 0) {
                                        updateSummaryPrice('shippingcost', this.shipping);
                                        updateSummaryPrice('price', this.shipping);
                                    }
                                });

                                $selectOption.parent().removeClass('loading');
                                $selectOption.trigger('change');
                            }
                        });

                        $selectOption.on('change.selectOption', function() {
                            var $selectedOption = $selectOption.find('option:selected');
                            updateSummaryPrice('shippingcost', $selectedOption.data('price'));
                            updateSummaryPrice('price', $selectedOption.data('price'));

                            $summaryOption.text($selectedOption.text()).parents('tr').fadeIn();
                        });
                    }
                },
                error: function(XMLHttpRequest) {
                    var error = XMLHttpRequest.responseJSON;
                }
            });
        }
    }

    var updateSummaryPrice = function(type, addingAmount) {
        if(!type) {
            type = 'price';
        }
        var $price = $('.js-summary-'+type);
        var plainPrice = $price.data('plain-price');
        var updatedPrice = plainPrice + addingAmount;
        $price.text(zilvercms.currencyHelper(updatedPrice));
    }

    if($pickupLocation.length) {
        if($pickupLocation.val() != '') {
            recievePickupLocations($pickupLocation.val());
        }

        $pickupLocation.on('keyup.pickupLocation', function() {
            if($pickupLocation.val() != '') {
                recievePickupLocations($pickupLocation.val());
            }
        });

        $('.js-address-zipcode').each(function() {
            var $zipcode = $(this);

            $zipcode.on('change.pickupLocationAutofill', function() {
                if($pickupLocation.val() == '') {
                    var $shippingZipcode = $('.js-address-zipcode:visible').last();
                    var shippingZipcode = $shippingZipcode.val();
                    $pickupLocation.val(shippingZipcode);
                    recievePickupLocations(shippingZipcode);
                }
            });
        });

        $('.js-pickup-update').each(function() {
            var $button = $(this);

            $button.on('click.pickupLocationUpdate', function(e) {
                var zipcode = $pickupLocation.val();
                recievePickupLocations(zipcode);
            });
        });
    } else if ($timeframe.length) {
        $('.js-address-zipcode, .js-address-streetnr').each(function() {
            $address = $(this);

            recieveTimeframes();

            $address.on('change.timeframeAutofill', function() {
                recieveTimeframes();
            });
        });
    }
});

$(document).ready(function() {
    $('.js-pdp-fixed').each(function() {
        var $fixed = $(this);

        if(zilvercms.viewport.isEqualOrSmallerThan('md')) {
            var $order = $('.js-pdp-order:visible');
            var scrollTop = $order.offset().top + $order.height();

            $(window).on('scroll', function() {
                if($(this).scrollTop() >= scrollTop) {
                    $fixed.addClass('active');
                    $('.js-whatsapp').addClass('higher');
                    $('#live-chat-widget').addClass('hide');
                } else {
                    $fixed.removeClass('active');
                    $('.js-whatsapp').removeClass('higher');
                    $('#live-chat-widget').removeClass('hide');
                }
            });
        }
    });

    $('.js-pdp-pinterest').each(function() {
        var $pinterest = $(this);
        var scrollTop = $pinterest.offset().top;

        $(window).on('scroll.loadPinterest', function() {
            if($(this).scrollTop() >= scrollTop) {
                var $script = $('<script/>', {
                    async: true,
                    src: '//assets.pinterest.com/js/pinit.js',
                })
                $pinterest.append($script);
                $(window).off('scroll.loadPinterest');
            }
        });
    });
});

$(document).ready(function() {
	$('.js-products-filter').on('change', function() {
        var newUrl = $(this).val();

        if(zilvercms.viewport.isEqualOrSmallerThan('sm')) {
            $(this).parents('.modal-dialog').addClass('loading-area');
        }

        if(newUrl) window.location = newUrl;
		return false;
	});

    $('.js-products-active-filter').on('click', function() {
        if(zilvercms.viewport.isEqualOrSmallerThan('sm')) {
            $(this).parents('.modal-dialog').addClass('loading-area');
        }
	});

    $('.js-promo-youtube').each(function() {
        var $video = $(this);
        var youtubeDiv = $video.find('div');
        var youtubeId = youtubeDiv.attr('id').replace('VIDEO-' ,'');

        $video.on('click.yt', function() {
            if(typeof(YT) !== 'undefined') {
                $video.addClass('playing').off('click.yt');

                var player = new YT.Player(youtubeDiv.attr('id'), {
                    videoId: youtubeId,
                    playerVars: {
                        autoplay: 1,
                        modestbranding: 1,
                        playsinline: 1,
                        rel: 0
                    }
                });

                setTimeout(function() {
                    player.playVideo();
                }, 1000);
            }
        });
    });

    $('.js-products-loadmore').each(function() {
        var $button = $(this);

        $button.on('click', function(e) {
            e.preventDefault();

            var currentPage = $button.data('current-page');
            var nextPage = currentPage + 1;
            var numberOfPages = $button.data('number-pages');

            if(typeof URLSearchParams === 'function') {
                var urlParameters = new URLSearchParams(window.location.search);
                urlParameters.set('page', nextPage);
            } else {
                var urlParameters = ('page=' + nextPage);
            }

            $button.addClass('loading-icon');

            $.ajax({
                url: window.location.pathname + '?' + urlParameters,
                method: 'GET',
                success: function(result) {
                    var $html = $(result);

                    if($html.find('.js-products').length) {
                        var currentScrollTop = $(window).scrollTop();
                        var products = $html.find('.js-products').children('.productblock__wrapper');

                        $('.js-products').append(products);
                        $(window).scrollTop(currentScrollTop);
                        $button.data('current-page', nextPage).removeClass('loading-icon');
                        window.history.pushState('', '', '?' + urlParameters);

                        if(nextPage >= numberOfPages) {
                            $button.remove();
                        } else {
                            var buttonOffet = $button.offset().top + 100;

                            $(window).off('scroll.loadMore').on('scroll.loadMore', function() {
                                if(($(window).scrollTop() + $(window).outerHeight()) > buttonOffet) {
                                    $(window).off('scroll.loadMore');
                                    $button.trigger('click');
                                }
                            });
                        }
                    }
                }
            });

            return false;
        });
    });

    $('.js-products-backtotop').each(function() {
        var $button = $(this);

        $(window).on('scroll.backToTop', function() {
            $button.toggleClass('visible', ($(this).scrollTop() > $(this).outerHeight()));
        });

        $button.on('click', function() {
            $('html, body').animate({
                scrollTop: 0
            });
        });
    });
});

$(document).ready(function() {
    $('.js-promobar-countdown').each(function() {
        var $countdown = $(this);
        var countDownDate = Date.parse($countdown.attr('data-date'));

        var x = setInterval(function () {
            var now = new Date().getTime();
            var distance = countDownDate - now;

            var days = Math.floor(distance / (1000 * 60 * 60 * 24));
            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((distance % (1000 * 60)) / 1000);

            if(document.documentElement.lang === 'de') {
                $countdown.html("Noch " + days + (days === 1 ? " Tag " : " Tage ") + hours + (days === 1 ? " Stunde " : " Stunden ") + minutes + (minutes === 1 ? " Minute " : " Minuten ") + seconds + (seconds === 1 ? " Sekunde " : " Sekunden ") +" bis zum");
            } else {
                $countdown.html("Nog " + days + (days === 1 ? " dag " : " dagen ") + hours + " uur " + minutes + (minutes === 1 ? " minuut " : " minuten ") + seconds + (seconds === 1 ? " seconde " : " seconden ") +" tot de");
            }

            if (distance < 0) {
                clearInterval(x);
                $countdown.html('');
            }
        }, 1000);
    });

    $('.js-promobar').each(function() {
        var $promobar = $(this);
        var $header = $promobar.next('.header__topbar');
        $header.css('top', $promobar.outerHeight());
    });
});

$('body').on('submit', '.js-question', function(e) {
    e.preventDefault();
    var $form = $(this);

    // Extra check if validation is active
    if(!$form.valid()) {
        return false;
    }

    var $alertSuccess = $form.find('.alert-success');
    var $alertDanger = $form.find('.alert-danger');
    var $footerElements = $form.find('.modal-footer').children();
    var $formData = $form.serialize();
    var $formElements = $form.find('input, textarea, select');

    $formElements.prop('disabled', true);

    $.ajax({
        type: 'post',
        url: '/bjax/ProductQuestion/Ask',
        data: $formData,
        success: function(response) {
            $alertSuccess.removeClass('d-none');
            $alertDanger.addClass('d-none');
            $footerElements.toggleClass('d-none');
        },
        error: function(response) {
            $alertDanger.removeClass('d-none');
            $alertSuccess.addClass('d-none');
            $formElements.prop('disabled', false);
        }
    });

    return false;
});

$('.js-reminder').each(function() {
    var $form = $(this);

    $form.on('submit', function() {
        if(!$form.valid()) {
            return false;
        }

        var $alertSuccess = $form.find('.text-success');
        var $formData = $form.serialize();
        var $formButton = $form.find('button');
        var $formInput = $form.find('input, button');

        $formButton.prop('disabled', true).addClass('loading');
        $formInput.prop('disabled', true);

        $.ajax({
            type: $form.attr('method'),
            url: $form.attr('action'),
            data: $formData,
            success: function(response) {
                $formButton.hide();
                $alertSuccess.removeClass('d-none');
            },
            error: function(response) {
                if(response.responseText === 'already_exists') {
                    $formButton.hide();
                    $alertSuccess.removeClass('d-none');
                } else {
                    $alertSuccess.addClass('d-none');
                    $formButton.prop('disabled', false).removeClass('loading');
                    $formInput.prop('disabled', false);
                }
            }
        });

        return false;
    });
});

$('body').on('click.addInput', '.js-review-add-input', function() {
    var $add = $(this);
    var $inputs = $add.prevUntil('h6', 'input');

    if($inputs.length < 5) {
        var $newInput = $inputs.last().clone().val('');
        $newInput.insertBefore($add).focus();

        if($inputs.length === 4) {
            $add.remove();
        }
    }
    return false;
});

$('body').on('submit', '.js-review', function() {
    var $form = $(this);
    var $addInputs = $form.find('.js-review-add-input');

    // Extra check if validation is active
    if(!$form.valid()) {
        return false;
    }

    // Review validation
    var $reviewNumber = $form.find('.js-review-number');
    var $reviewExpval = $form.find('.js-review-expval');
    if($reviewNumber && $reviewExpval) {
        $reviewExpval.val($reviewNumber.val());
    }

    // Positive and negative points
    var $positives = $form.find('.js-review-positive');
    var positives = $positives.map(function() {
        var value = $.trim(this.value);
        return value ? value : undefined;
    }).get().join(' || ');
    var $negatives = $form.find('.js-review-negative');
    var negatives = $negatives.map(function() {
        var value = $.trim(this.value);
        return value ? value : undefined;
    }).get().join(' || ');

    // Set message
    var message = {
        message: $form.find('.js-review-experience').val(),
        positive: positives,
        negative: negatives
    };
    $form.find('.js-review-message').val(JSON.stringify(message));

    var $alertSuccess = $form.find('.alert-success');
    var $alertDanger = $form.find('.alert-danger');
    var $footerElements = $form.find('.modal-footer').children();
    var $formData = $form.serialize();
    var $formElements = $form.find('input, textarea, select');

    $addInputs.off('click.addInput');
    $formElements.prop('disabled', true);

    $.ajax({
		type: 'post',
		url: '/productreview',
		data: $formData,
		success: function(response) {
            $alertSuccess.removeClass('d-none');
            $alertDanger.addClass('d-none');
            $footerElements.toggleClass('d-none');
		},
		error: function(response) {
            $alertDanger.removeClass('d-none');
            $alertSuccess.addClass('d-none');
			$formElements.prop('disabled', false);
		}
	});

    return false;
});

$(document).ready(function() {
    $('.js-scroller').each(function() {
        var $scroller = $(this);
        var $row = $scroller.find('.row');
        var $scrollPrev = $scroller.next('.js-scroller-navigation').find('.js-scroller-prev');
        var $scrollNext = $scroller.next('.js-scroller-navigation').find('.js-scroller-next');

        var scrollDuration = 400;
        var scrollWidth = 0;
        var scrollTrackWidth;
        var scrollTrackScrollWidth;

        var setScrollSettings = function() {
            if(scrollWidth === 0) {
                scrollWidth = $row.children().first().outerWidth();
                scrollTrackWidth = $row.outerWidth();
                scrollTrackScrollWidth = $row[0].scrollWidth;
            }
        }

        var checkScrollPosition = function() {
            var scrollLeft = $row.scrollLeft();

            if(scrollLeft === 0) {
                $scroller.addClass('start');
                $scrollPrev.addClass('disabled');
            } else {
                $scroller.removeClass('start');
                $scrollPrev.removeClass('disabled');
            }
            if(Math.round(scrollLeft + scrollTrackWidth) === scrollTrackScrollWidth) {
                $scroller.addClass('end');
                $scrollNext.addClass('disabled');
            } else {
                $scroller.removeClass('end');
                $scrollNext.removeClass('disabled');
            }
        };

        checkScrollPosition();
        $row.on('scroll', function() {
            checkScrollPosition();
        });

        $scrollPrev.on('click', function() {
            setScrollSettings();
            if(!$scrollPrev.hasClass('disabled')) {
                $row.animate({scrollLeft: '-='+ scrollWidth}, scrollDuration);
            }
        });

        $scrollNext.on('click', function() {
            setScrollSettings();
            if(!$scrollNext.hasClass('disabled')) {
                $row.animate({scrollLeft: '+=' + scrollWidth}, scrollDuration);
            }
        });
    });

    if(!!/iPhone|iPad|iPod/i.test(navigator.userAgent)) {
        $('.js-scroller-bar').each(function() {
            var $scroller = $(this);

            var $bar = $('<div/>').addClass('scroller--bar');
            $scroller.after($bar);

            var scrollWidth = 0;
            $scroller.children().each(function(e) {
                scrollWidth += $(this).outerWidth();
            });

            var scrollSum = (scrollWidth / $bar.width());

            var $track = $('<div/>');
            $track.width(Math.floor($bar.width() / scrollSum) + 5).appendTo($bar);

            $scroller.addClass('ios');

            $scroller.on('scroll', function(e) {
                $track.css('transform', 'translateX('+($scroller.scrollLeft() / scrollSum)+'px)')
            });
        });
    }
});

$(document).ready(function() {
    $('.js-scrollto').each(function() {
        var $trigger = $(this);
        var headerOffet = $('.header__topbar').height();

        $trigger.on('click', function() {
            var target = $trigger.attr('href');
            var $target = $(target);
            var offset = $target.offset().top - (headerOffet + 16);
            
            $('html, body').animate({
                scrollTop: offset
            }, 400);
        });
    });
});

$('.js-search-toggle').each(function() {
    $(this).on('click', function() {
        window.cookinglifeSearch();
    });
});

window.cookinglifeSearch = function() {
    if(zilvercms.viewport.isEqualOrSmallerThan('sm')) {
        var $search = $('.js-search');
        var $input = $search.find('input');
        var $close = $search.find('.js-search-close');
        var $overlay = $('<div/>').addClass('header__search-overlay');

        if(!$search.hasClass('show')) {
            zilvercms.lockBody();
            $search.addClass('show');
            $overlay.insertAfter($search).fadeIn().on('click.closeSearch', function() {
                $search.removeClass('show');
                $overlay.fadeOut(function() {
                    $overlay.remove();
                });
                $input.val('');
                $('.sqr-closeButton').trigger('click');
                zilvercms.unlockBody();
            });

            $close.on('click.closeSearch', function() {
                $overlay.trigger('click.closeSearch');
            });
        }
    } else {
        zilvercms.lockBody();
    }
}

$(document).ready(function() {
    $('.js-select2').each(function() {
        var $select = $(this);

        $select.select2({
            allowHtml: true,
            minimumResultsForSearch: -1,
            sorter: function(data) {
                return data.sort(function(a, b) {
                    return (a.text.toLowerCase() > b.text.toLowerCase()) ? 0 : -1;
                });
            },
            theme: 'flat',
            templateResult: function(data) {
                return select2Template(data, false);
            },
            templateSelection: function(data) {
                return select2Template(data, true);
            }
        }).on('select2:select', function(e) {
            if($select.data('goto-value')) {
                $('html').addClass('loading');
                zilvercms.lockBody();
                window.location = e.params.data.id;
            }
        });
    });

    function select2Template(data, selection) {
        var $option = $(data.element);
        var id = data.id;
        var text = data.text;
        var image = $option.data('image');
        var price = $option.data('price');
        var priceOld = $option.data('old-price');

        var $image;
        var $price;
        var $priceOld;
        var $selected;

        if(!selection && data.selected) {
            $selected = $('<i/>').attr('data-icon-after', '');
        }

        if(image) {
            $image = $('<div/>', {class: 'img img--contain'}).html($('<img/>', {src: image}));
        }

        if(!selection && price) {
            if(priceOld) {
                $priceOld = $('<s/>').html(zilvercms.currencyHelper(priceOld));
            }

            $price = $('<div/>', {class: 'select2__price'}).html(zilvercms.currencyHelper(price)).prepend($priceOld);
        }

        var $option = $('<div/>', {
            class: 'd-flex align-items-center'
        }).html(text).prepend($image).append($selected).append($price);

        return $option;
    }
});

$(window).on('load', function() {
    function animateShowroom() {
        if(zilvercms.viewport.isEqualOrSmallerThan('sm')) {
            var $scroller = $('.js-showroom-scroller');
            var maxScroll = $scroller.children().width() - $scroller.width();

            $scroller.animate({
                scrollLeft: maxScroll
            }, 2000, 'linear', function() {
                $scroller.animate({
                    scrollLeft: maxScroll / 2
                }, 1000);
            });
        }
    }

    $('.js-showroom-tutorial').each(function () {
        var $tutorial = $(this);
        var $closeTutorial = $(this).find('.js-close-tutorial');
        var $range = $('.js-showroom-range');
        var cookieName = 'showroomTutorial';
        var cookie = zilvercms.getCookie(cookieName);

        if(zilvercms.viewport.isEqualOrSmallerThan('sm')) {
            $(this).find('.js-showroom-slider').slick({
                dots: true,
                infinite: false,
                nextArrow: $(this).find('.js-showroom-slider-next'),
                prevArrow: '',
                slidesToShow: 1
            });
        }

        if(cookie === '') {
            $tutorial.removeClass('noshow');
            $range.hide();

            $closeTutorial.on('click', function () {
                zilvercms.setCookie(cookieName, true, 30);
                $tutorial.addClass('noshow');
                $range.show();
                animateShowroom();
                return false;
            });
        } else {
            animateShowroom();
        }
    });

    $('.js-hotspot').each(function () {
        var $hotspot = $(this);
        var hotspotId = $hotspot.data('hotspotid');
        var $products = $('.js-showroom-products[data-hotspotid="'+hotspotId+'"]');
        var $otherHotspots = $('.js-hotspot').not($hotspot);
        var $otherProducts = $('.js-showroom-products').not($products);
        var $range = $('.js-showroom-range');

        $hotspot.on('click', function () {
            $otherHotspots.addClass('noshow');
            $otherProducts.addClass('noshow');
            $hotspot.removeClass('noshow');
            $products.removeClass('noshow');
            $range.hide();

            $('.js-showroom-image').on('click', function() {
                $otherHotspots.removeClass('noshow');
                $products.addClass('noshow');
                $range.show();
                $(this).off('click');
            });
        });
    });

    $('.js-showroom-products').each(function () {
        var $popup = $(this);
        var $slider = $popup.find('.js-showroom-slider');
        var $range = $('.js-showroom-range');

        if((zilvercms.viewport.isEqualOrSmallerThan('md') && $popup.data('amount') > 1) || (zilvercms.viewport.isEqualOrGreaterThan('lg') && $popup.data('amount') > 2)) {
            $slider.slick({
                dots: true,
                infinite: false,
                nextArrow: $(this).find('.js-showroom-slider-next'),
                prevArrow: $(this).find('.js-showroom-slider-prev'),
                slidesToShow: zilvercms.viewport.isEqualOrSmallerThan('md') ? 1 : 2
            });
        }

        $(this).find('.js-close-product').on('click', function () {
            $('.js-showroom-products').addClass('noshow');
            $('.js-hotspot').removeClass('noshow');
            $range.show();
            return false;
        });
    });

    if(zilvercms.viewport.isEqualOrSmallerThan('sm')) {
        $('.js-showroom-scroller').each(function () {
            var $scroller = $(this);
            var $range = $scroller.next('.js-showroom-range');

            $scroller.on('scroll', function(e) {
                var position = $scroller.scrollLeft();
                $range.val(position);
            });

            $scroller.find('.showroom__canvas').css('height', (window.innerHeight - 130));
        });

        $('.js-showroom-range').each(function () {
            var $range = $(this);
            var $scroller = $range.prev('.js-showroom-scroller');
            var maxScroll = $scroller.children().width() - $scroller.width();

            $range.attr('max', maxScroll).on('input', function(e) {
                $scroller.scrollLeft($(this).val());
            });
        });
    }
});

$(document).ready(function() {
    $('.js-slick').each(function() {
        var $slick = $(this);
        var $slickImages = $slick.children();

        // Set image size based on screen size and pixel ratio
        $slickImages.each(function() {
            var $img = $(this).find('img');
            var original = $img.data('original');

            if(original) {
                var pixelRatio = (window.devicePixelRatio > 1) ? 2 : 1;
                var height = $(this).parent().height() * pixelRatio;
                var width = $(this).parent().parent().width() * pixelRatio;
                $img.attr('data-lazy', zilvercms.imageHelper(original, width+'x'+height+',fit'));
            }
        });


        $slick.on('init', function(event, slick) {
            var hiddenThumbs = 0;
            var $lastVisibleThumb;

            $slick.lightGallery({
                autoplay: false,
                autoplayFirstVideo: true,
                download: false,
                exThumbImage: 'data-thumb',
                loadYoutubeThumbnail: true,
                selector: slick.$slides,
                youtubeThumbSize: 'mqdefault',
                youtubePlayerParams: {
                    modestbranding: 1,
                    rel: 0,
                    showinfo: 0
                },
                thumbWidth: 80
            });

            if(slick.$dots) {
                var parentWidth = slick.$dots.parent().width();
                var parentOffset = slick.$dots.offset().left;

                slick.$dots.find('li').each(function() {
                    var $thumb = $(this);
                    var width = $thumb.width();
                    var offsetRight = ($thumb.offset().left + width) - parentOffset;

                    if(offsetRight > parentWidth) {
                        $thumb.addClass('d-none');
                        hiddenThumbs++;
                    } else {
                        $lastVisibleThumb = $thumb;
                    }
                });

                if(hiddenThumbs > 0) {
                    $lastVisibleThumb.find('.slick-thumb').attr('data-plus', '+'+(hiddenThumbs + 1));
                }
            }

            $slick.find('.slick-next').addClass('arrow next');
            $slick.find('.slick-prev').addClass('arrow prev');
            $slick.removeClass('d-none');
        });

        $slick.slick({
            adaptiveHeight: false,
            appendDots: $slick.parent(),
            customPaging: function(slider, i) {
                var slide = slider.$slides[i];
                var $slide = $(slide);
                var thumb = $slide.data('thumb');
                var $thumb = $('<img/>').attr({'src': thumb});
                var $dot = $('<div/>').attr({'class': 'slick-thumb'}).html($thumb);
                if($slide.hasClass('slick-video')) {
                    $dot.addClass('slick-thumb-video');
                }
                $dot.on('click', function() {
                    if($dot.attr('data-plus') || $slide.hasClass('slick-video')) {
                        $slide.trigger('click');
                        return false;
                    }
                });
                return $dot;
            },
            dots: ($slickImages.length > 1),
            infinite: true,
            initialSlide: 0,
            swipe: zilvercms.viewport.isEqualOrSmallerThan('md')
        });
    });

    $('.js-trigger-slick-video').each(function() {
        var $trigger = $(this);
        var $slickVideo = $('.slick-thumb-video');

        $trigger.on('click', function() {
            $slickVideo.click();
            return false;
        });
    });
});

var _wssq = _wssq || [];
var language = document.documentElement.lang;
var searchField = 'search-field';
var $searchField = $('#' + searchField);
var sooqrAccount = $searchField.data('sooqr');
var sooqrLocale = document.documentElement.lang.toLowerCase() + '_' + document.documentElement.lang.toUpperCase();

if(sooqrAccount) {
    _wssq.push(['_load', {
        suggest: {
            account: 'SQ-' + sooqrAccount,
            fieldId : searchField,
            locale: sooqrLocale,
            version: 4
        }
    }]);

    _wssq.push(['suggest._bindEvent', 'open', function() {
        window.cookinglifeSearch();

        $searchField.parents('form').on('submit.search', function() {
            document.activeElement.blur();
            $searchField.blur();
        });

        infiniteScroll(sooqrAccount);

        pushDataLayer('sooqrOpen');
    }]);

    _wssq.push(['suggest._bindEvent', 'updateResults', function() {
        if(zilvercms.viewport.isEqualOrSmallerThan('xs')) {
            $('.sqr-resultItem .stock').each(function() {
                var $stock = $(this)
                var $wrapper = $stock.parent();
                $stock.children().unwrap();
                $wrapper.addClass('stock-label');
                $wrapper.unwrap().unwrap();
            });

            $('.sqr-results.sqr-grid').attr('class', 'sqr-results detail sqr-detail');
        }

        $('.sqr-resultItem').each(function() {
            var $item = $(this);
            var $price = $item.find('.sqr-price');
            var _price = zilvercms.currencyHelper($price.text().replace(/[^0-9]/g, ''));
            $price.html(_price);
        });

        infiniteScroll(sooqrAccount);

        pushDataLayer('sooqrUpdate');
    }]);

    _wssq.push(['suggest._bindEvent', 'close', function() {
        $('#search-field').parents('form').off('submit.search');

        if(zilvercms.viewport.isGreaterThan('xs')) {
            zilvercms.unlockBody();
        }

        $jQ('.sooqrSearchContainer-' + sooqrAccount + ' .sooqrSearchResultsContainer').unbind('scroll.infiniteScroll');

        pushDataLayer('sooqrClose');
    }]);

    function infiniteScroll(sooqrAccount) {
        $jQ('.sooqrSearchContainer-' + sooqrAccount + ' .sooqrSearchResultsContainer').unbind('scroll.infiniteScroll').bind('scroll.infiniteScroll', function() {
            var $container = $jQ(this);
            var $results =  $container.find('.sooqrSearchResults');
            var $more = $container.find('.sqr-moreResults');

            if($more.is(':visible') && ($container.scrollTop() + $container.outerHeight()) > ($results.outerHeight() - 60)) {
                $more.trigger('click');
            }
        });
    }

    function pushDataLayer(eventName) {
        window.dataLayer = window.dataLayer || [];
        dataLayer.push({
            event: eventName
        });
    }

    (function() {
        var ws = document.createElement('script'); ws.type = 'text/javascript'; ws.async = true;
        ws.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'static.sooqr.com/sooqr.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ws, s);
    })();
}

if(typeof URLSearchParams !== 'undefined') {
    var urlParams = new URLSearchParams(window.location.search);
    var source = urlParams.get('utm_source');
    var medium = urlParams.get('utm_medium');
    var campaign = urlParams.get('utm_campaign');

    if(source !== null) {
        document.cookie = ['last_utm_source=', source, ';path=/'].join('');
    }
    if(medium !== null) {
        document.cookie = ['last_utm_medium=', medium, ';path=/'].join('');
    }
    if(campaign !== null) {
        document.cookie = ['last_utm_campaign=', campaign, ';path=/'].join('');
    }
}

$(document).ready(function() {
    // Check if browser supports date input
    var datePickerFormatMessage = '';
    var inputField = document.createElement('input');
    inputField.setAttribute('type', 'date');
    if(inputField.type != 'date') {
        datePickerFormatMessage = ' (JJJJ-MM-DD)';
    }

    $.validator.messages = {
        required: zilvercms.translationHelper('validate.required'),
        remote: zilvercms.translationHelper('validate.remote'),
        email: zilvercms.translationHelper('validate.email'),
        url: zilvercms.translationHelper('validate.url'),
        date: zilvercms.translationHelper('validate.date'),
        dateISO: zilvercms.translationHelper('validate.dateISO'),
        number: zilvercms.translationHelper('validate.number'),
        digits: zilvercms.translationHelper('validate.digits'),
        creditcard: zilvercms.translationHelper('validate.creditcard'),
        equalTo: zilvercms.translationHelper('validate.equalTo'),
        extension: zilvercms.translationHelper('validate.extension'),
        maxlength: $.validator.format(zilvercms.translationHelper('validate.maxlength')),
        minlength: $.validator.format(zilvercms.translationHelper('validate.minlength')),
        rangelength: $.validator.format(zilvercms.translationHelper('validate.rangelength')),
        range: $.validator.format(zilvercms.translationHelper('validate.range')),
        max: $.validator.format(zilvercms.translationHelper('validate.max')),
        min: $.validator.format(zilvercms.translationHelper('validate.min')),
        step: $.validator.format(zilvercms.translationHelper('validate.step'))
    };

    $.validator.addMethod('zipcodeNL', function(value, element) {
        if($(element).hasClass('js-address-zipcode')) {
            return /^[1-9][0-9]{3}\s?[a-zA-Z]{2}$/.test(value);
        } else {
            return true;
        }
    }, 'Vul een geldige postcode in, bijv: 1234AB');

    $.validator.addMethod('visiblePaymentMethod', function(value, element) {
        return $('#method'+value).is(':visible');
    }, zilvercms.translationHelper('webshop.checkout.select_paymentmethod'));

    $.validator.addMethod('validDate', function(value, element) {
        var regEx = /^\d{4}-\d{2}-\d{2}$/;
        if(!value.match(regEx)) {
            return false;  // Invalid format
        }

        var today = new Date();
        var date = new Date(value);
        if(Number.isNaN(date.getTime())) {
            return false; // Invalid date
        } else if ((today.getFullYear() - date.getFullYear()) > 110) {
            return false; // Invalid age
        }

        return date.toISOString().slice(0, 10) === value;
    }, (zilvercms.translationHelper('validate.birthdate') + datePickerFormatMessage));

    $.validator.addMethod('minAge18', function(value, element) {
        var birthDate = new Date(value);
        var eighteenYearsAgo = new Date();
        eighteenYearsAgo.setFullYear(eighteenYearsAgo.getFullYear() - 18);

        return (birthDate < eighteenYearsAgo);
    }, zilvercms.translationHelper('validate.minAge18'));

    $.validator.addMethod('vatNumber', function(value, element) {
        var countryCode = $('.js-checkout-country').val();

        if(countryCode === 'nl') {
            return (value === '' || (value.length === 14 && value.match(/^[A-Z]{2}[0-9]{9}[A-Z]{1}[0-9]{2}/g)));
        } else if(countryCode === 'be') {
            return (value === '' || (value.length === 12 && value.match(/^[A-Z]{2}[0-9]{10}/g)));
        } else {
            return true;
        }
    }, zilvercms.translationHelper('validate.vatmessage'));

    $.validator.addMethod('cocNumber', function(value, element) {
        var selectedPaymentMethodName = $('*[data-payment-method]:checked').data('payment-method');
        if(selectedPaymentMethodName === 'billink') {
            return ($(element).val().length > 0);
        }
        return true;
    }, zilvercms.translationHelper('validate.required'));

    $.validator.addMethod('phone', function(value, element) {
        return value.match(/^\(?\+?[\d\(\-\s\)]+$/);
    }, zilvercms.translationHelper('validate.phone'));

    $.validator.addMethod('step', function(value, element) {
        var step = $(element).attr('step');
        return (Math.round(value/step) === (value/step));
    }, function(params, element) {
        var value = $(element).val();
        var step = $(element).attr('step');
        var prev = Math.floor(value/step) * step;
        var next = Math.ceil(value/step) * step;
        return zilvercms.translationHelper('validate.productStep', {
            '{step}': step,
            '{prev}': prev,
            '{next}': next
        });
    });

    $.validator.formValidation = function(form) {
        $(form).addClass('validating').validate({
			rules: {
				'data[buyer][phone]': {
                    minlength: 8,
                    maxlength: 17,
					phone: true,
                    required: true
				},
                'data[buyer][email]': {
                    email: true,
                    required: true
                },
                'data[invoice][zipcode]': {
                    zipcodeNL: true,
                    required: true
                },
                'data[shipping][zipcode]': {
                    zipcodeNL: true,
                    required: true
                },
                "data[buyer][vat]": {
                    vatNumber: true
                },
                'data[payment][method]': {
                    visiblePaymentMethod: true,
                    required: true
                },
                'data[buyer][birthdate]': {
                    validDate: true,
                    minAge18: true
                },
                'data[buyer][coc]': {
                    cocNumber: true
                },
                count: {
                    step: true
                }
			},
            messages: {
                order_accept: zilvercms.translationHelper('webshop.checkout.order_accept'),
                'data[payment][method]': zilvercms.translationHelper('webshop.checkout.select_paymentmethod'),
                'data[buyer][birthdate]': {
                    date: (zilvercms.translationHelper('validate.birthdate') + datePickerFormatMessage)
                },
                count: {
                    max: zilvercms.translationHelper('validate.maxOrder')
                }
            },
            ignore: ':hidden, .js-pickup-location',
            highlight: function(el) {},
            unhighlight: function(el) {
                var $el = $(el);

                if($el.parents('.productblock').length) {
                    $el.parents('.productblock').removeAttr('data-error');
                } else if($el.hasClass('checkout__payment-option')) {
                    $el.prev('.text.error').remove();
                } else if($el.hasClass('radio') || $el.hasClass('checkbox')) {
                    $el.next('label').removeAttr('data-error');
                } else {
                    $el.parent().removeAttr('data-error').removeAttr('data-success');

                    if($el.val() != '' && !$el.is('[readonly]')) {
                        $el.parent().attr('data-success', true);
                    }
                }
            },
            errorPlacement: function(error, el) {
                var $el = $(el);

                if($el.parents('.productblock').length) {
                    $el.parents('.productblock').removeAttr('data-success').attr('data-error', error[0].textContent);
                } else if($el.hasClass('checkout__payment-option')) {
                    var $div = $('<div/>').addClass('text error mb-3').text(error[0].textContent);
                    $el.prev('.text.error').remove();
                    $el.before($div);
                } else if($el.hasClass('radio') || $el.hasClass('checkbox')) {
                    $el.next('label').removeAttr('data-success').attr('data-error', error[0].textContent);
                } else {
                    $el.parent().removeAttr('data-success').attr('data-error', error[0].textContent);
                }
           }
       });
    };

    $('.js-validate').each(function() {
        $.validator.formValidation(this);
    });
});

$(document).ready(function() {
    $('.js-voysqueue').each(function() {
        var $badge = $(this);

        $.getJSON('/bjax/voys/queue/', function(data) {
            if(data.size === 0) {
                $badge.css('opacity', 1);
            } else {
                $badge.remove();
            }
        });
    });
});

$(document).ready(function() {
    $('.js-whatsapp').each(function() {
        var $badge = $(this);
        var cookie = zilvercms.getCookie('whatsappbadge');
        $badge.width($badge.width());

        if(!cookie) {
            setTimeout(function() {
                $badge.addClass('closed');
                zilvercms.setCookie('whatsappbadge', true, 1);
            }, 6000);
        } else {
            $badge.addClass('closed');
        }
    });
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,
